// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  customerId Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  address    String   @db.VarChar(255)
  email      String   @unique @db.VarChar(100)
  orders     Orders[] @relation("CustomerOrders")
}

model Item {
  itemId       Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  quantity     Int
  price        Decimal        @db.Decimal(10, 2)
  orderDetails OrderDetails[]
}

model Orders {
  orderId      Int            @id @default(autoincrement())
  customerId   Int
  orderDate    DateTime       @default(now())
  customer     Customer       @relation(fields: [customerId], references: [customerId], onDelete: Cascade, name: "CustomerOrders")
  orderDetails OrderDetails[]
}

model OrderDetails {
  orderDetailId Int     @id @default(autoincrement())
  orderId       Int
  itemId        Int
  quantity      Int
  price         Decimal @db.Decimal(10, 2)
  order         Orders  @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
  item          Item    @relation(fields: [itemId], references: [itemId], onDelete: Cascade)
}
